service cloud.firestore {
    match /databases/{database}/documents {

    function createdNow() {
      return request.time == request.resource.data.created;
    }

    function validate() {
      return request.auth.uid != null
          && request.auth.uid == resource.data.owner.uid
          && request.resource.data.owner.uid == request.auth.uid
          && request.resource.data.owner.photoURL is string
          && request.resource.data.owner.displayName is string
          && request.resource.data.updated == request.time;
    }

    match /notebooks/{nb} {
      allow read: if true;
      allow create: if validate() && createdNow();
      allow update: if validate();
    }
    
    
    function validatePkg() {
      return request.auth.uid != null
          && request.resource.data.owner.uid == request.auth.uid
          && request.resource.data.owner.photoURL is string
          && request.resource.data.owner.displayName is string
          && request.resource.data.url.size() > 0
          && request.resource.data.name.matches("^[a-z][0-9a-z_]{2,40}$")
          && request.resource.data.updated == request.time;
    }

    function dontChangeOwner() {
      return request.auth.uid != null
            && request.auth.uid == resource.data.owner.uid;
    }

    match /packages/{nb} {
      allow read: if true;
      allow create: if validatePkg() && createdNow();
      allow update: if validatePkg() && dontChangeOwner();
    }
  }
}

